{"version":3,"sources":["service/index.ts","service/Service.ts","components/item/index.ts","components/item/item.tsx","components/item-list/index.ts","components/item-list/ItemList.tsx","components/pagination/index.ts","components/pagination/pagination.tsx","components/posts-per-page/index.ts","components/posts-per-page/posts-per-page.tsx","components/App/App.tsx","components/App/index.ts","index.tsx"],"names":["service","_BASE_URL","getData","url","a","fetch","response","json","getPosts","getComment","id","Item","data","useState","comments","setComments","showComment","setShowComment","isFavorite","setIsFavorite","listComment","map","name","body","key","className","star","width","height","viewBox","fill","xmlns","d","fill-rule","border","onClick","title","length","then","type","ItemList","Pagination","nav","onClickPagination","prev_page","cur_page","pages","next_page","PostsPerPage","value","handleChange","htmlFor","onChange","event","target","App","posts","setPosts","useEffect","setCurPage","setNextPage","setPrevPage","postPerPage","setPostPerPage","count","Math","ceil","navigation","cutPosts","filter","item","idx","page","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44733479.chunk.js","sourcesContent":["import service from './Service';\r\nexport default service;","class Service {\r\n  _BASE_URL = 'https://jsonplaceholder.typicode.com/';\r\n\r\n  getData = async (url: string) => {\r\n    const response = await fetch(this._BASE_URL + url);\r\n    return await response.json();\r\n  };\r\n\r\n  getPosts = () => {\r\n    return this.getData('posts');\r\n  };\r\n\r\n  getComment = (id: number) => {\r\n    return this.getData(`comments/?postId=${id}`)\r\n  };\r\n};\r\n\r\nconst service = new Service();\r\nexport default service;","import Item from './item';\r\nexport default Item;","import React, { useState, MouseEvent } from 'react'\r\n\r\nimport service from '../../service';\r\n\r\nimport './item.css'\r\n\r\nconst Item = ({data}: ItemProps) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n  const fetchComments = () => {\r\n    service.getComment(data.id)\r\n      .then(setComments)\r\n  };\r\n\r\n  const switchShowComment = () => {\r\n    setShowComment(!showComment);\r\n  };\r\n\r\n  const onClickButton = () => {\r\n    if (!comments.length) fetchComments();\r\n    switchShowComment();\r\n  };\r\n\r\n  \r\n  const listComment = comments.map(({id, name, body}) => {\r\n    return (\r\n      <div key={id} className=\"comment list-group-item list-group-item-action flex-column align-items-start\">\r\n        <h5>{id}){name}</h5>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const addFavorite = () => {    \r\n    setIsFavorite(!isFavorite);\r\n  };\r\n\r\n  const star = isFavorite ?\r\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-star-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\r\n    </svg> :\r\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-star\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path fill-rule=\"evenodd\" d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288l1.847-3.658 1.846 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.564.564 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"/>\r\n    </svg>\r\n  const border = isFavorite ? 'border-primary' : 'border-secondary'\r\n  return (\r\n    <article className={'card md-6 ' + border}>\r\n      <div className='card-body'>\r\n        <div onClick={addFavorite} >{star}</div>        \r\n        <h4 className=\"card-title\">{data.id}) {data.title}</h4>\r\n        <p className=\"card-text\">{data.body}</p>\r\n        <button onClick={onClickButton} type=\"button\" className=\"btn btn-primary btn-sm\">Показать комментарии</button>\r\n      </div>\r\n      <div className=\"list-group\">\r\n        {showComment && listComment}\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport interface dataTypes {\r\n  userId: number,\r\n  id: number,\r\n  title: string,\r\n  body: string\r\n};\r\n\r\nexport interface ItemProps {\r\n  data: dataTypes\r\n};\r\n\r\nexport default Item;\r\n","import ItemList from './ItemList';\r\nexport default ItemList;","import React from 'react';\r\n\r\nimport Item from '../item';\r\n\r\nimport './item-list.css'\r\n\r\nconst ItemList = ({data}: ListItemProps ) => {\r\n  return (\r\n    <div className=\"contianer\">\r\n      <div className='card-columns'>\r\n        {\r\n          !!data && data.map((data) => {\r\n            return <Item key={data.id} data={data}/>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport interface dataTypes {\r\n  userId: number,\r\n  id: number,\r\n  title: string,\r\n  body: string\r\n};\r\n\r\nexport interface ListItemProps {\r\n  data: Array<dataTypes> | undefined\r\n};\r\n\r\nexport default ItemList;\r\n","import Pagination from './pagination';\r\nexport default Pagination;","import React from 'react'\r\n\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({nav, onClickPagination}: PaginationProps) => {\r\n  return (\r\n    <div className='my-pagination'>\r\n      <button className=\"btn btn-outline-primary btn-sm\" onClick={() => onClickPagination(nav.prev_page)}>&laquo;</button>\r\n      {` page ${nav.cur_page} of ${nav.pages} `}\r\n      <button className=\"btn btn-outline-primary btn-sm\" onClick={() => onClickPagination(nav.next_page)}>&raquo;</button >\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface navTypes {\r\n  prev_page: number,\r\n  cur_page: number,\r\n  next_page: number,\r\n  pages: number\r\n}\r\n\r\nexport interface PaginationProps {\r\n  nav: navTypes,\r\n  onClickPagination: (arg: number) => void\r\n};\r\n\r\nexport default Pagination;\r\n","import PostsPerPage from './posts-per-page';\r\nexport default PostsPerPage;","import React from 'react'\r\n\r\nconst PostsPerPage = ({value, handleChange}: PostsPerPageProps) => {\r\n\r\n  const handleChangeValue = (event: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    handleChange(+event.target.value);\r\n  };\r\n\r\n  return (\r\n    <label htmlFor=\"ppp\">\r\n      Posts per page: \r\n      <select value={`${value}`} id=\"ppp\" onChange={handleChangeValue}>\r\n        <option value=\"4\">4</option>\r\n        <option value=\"10\">10</option>\r\n        <option value=\"20\">20</option>\r\n      </select>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport interface PostsPerPageProps {\r\n  value: number,\r\n  handleChange: (value: number) => void\r\n}\r\n\r\nexport default PostsPerPage;\r\n","import React, { useState, useEffect } from 'react';\n\nimport service from '../../service';\n\nimport ItemList from '../item-list';\nimport Pagination from '../pagination';\nimport PostsPerPage from '../posts-per-page';\n\nimport './app.css';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    service.getPosts()\n      .then(setPosts)\n  }, []);\n  \n  const [cur_page, setCurPage] = useState(1);\n  const [next_page, setNextPage] = useState(2);\n  const [prev_page, setPrevPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(10)\n\n  const count: number = posts.length,\n        pages: number = Math.ceil(count/postPerPage),\n        navigation = {\n          cur_page,\n          next_page,\n          prev_page,\n          pages\n        };\n\n  const onClickPagination = (page: number): void => {\n    setCurPage(page);\n    if (page - 1 !== 0) setPrevPage(page-1)\n    else setPrevPage(pages);\n    if (page !== pages) setNextPage(page + 1)\n    else setNextPage(1);\n  };\n\n  const handlePostPerPage = (value: number) => {\n    setPostPerPage(value);\n  };\n\n  const cutPosts = posts.filter((item, idx) => {\n    if (idx >= (cur_page-1) * postPerPage && idx < cur_page * postPerPage)\n    return item;\n    return false\n  });\n\n  return (\n    <main className='main'>\n      <header className='navbar navbar-expand-lg navbar-dark bg-primary'>\n        <div className=\"header-container\">\n          <h1 className='navbar-brand'>Posts:</h1>\n          <PostsPerPage value={postPerPage} handleChange={handlePostPerPage}/>\n        </div>\n      </header>\n      <ItemList data={cutPosts}/>\n      <Pagination nav={navigation} onClickPagination={onClickPagination}/>\n    </main>\n  );\n};\n\nexport default App;\n","import App from './App'\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}